# templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "n8n.fullname" . }}-deployment
  labels:
    app: {{ include "n8n.name" . }}
    chart: {{ include "n8n.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "n8n.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ include "n8n.name" . }}
        release: {{ .Release.Name }}
    spec:
      # -------------------------------------------------------------
      # 1) securityContext no n√≠vel do Pod para UID/GID 1000
      # -------------------------------------------------------------
      securityContext:
        runAsUser: {{ .Values.securityContext.runAsUser }}
        fsGroup: {{ .Values.securityContext.fsGroup }}

      # -------------------------------------------------------------
      # 2) initContainers: fixPermissions e waitForRedis
      # -------------------------------------------------------------
      initContainers:
        # 2.1) fix-permissions: garante que /home/node/.n8n seja owned por node:node (1000:1000)
        - name: fix-permissions
          image: {{ .Values.initContainers.fixPermissions.image }}
          command:
            - sh
            - "-c"
            - |
              echo "üîß Ajustando permiss√µes em /home/node/.n8n..."
              chown -R {{ .Values.securityContext.runAsUser }}:{{ .Values.securityContext.fsGroup }} /home/node/.n8n
          volumeMounts:
            - name: n8n-data
              mountPath: /home/node/.n8n

        # 2.2) wait-for-redis: s√≥ deve rodar se modo queue estiver habilitado
        {{- if .Values.initContainers.waitForRedis.enabled }}
        - name: wait-for-redis
          image: {{ .Values.initContainers.waitForRedis.image }}
          command:
            - sh
            - "-c"
            - |
              echo "‚è≥ Aguardando Redis {{ .Values.redisConfig.host }}:{{ .Values.redisConfig.port }} ficar pronto..."
              until nc -z {{ .Values.redisConfig.host }} {{ .Values.redisConfig.port }}; do
                echo "üöß Redis ainda n√£o responde. Dormindo 3s..."
                sleep 3
              done
              echo "‚úÖ Redis est√° online."
          # N√£o precisa montar volumes extras aqui, mas mantive o bloco vazio
          volumeMounts: []
        {{- end }}

      # -------------------------------------------------------------
      # 3) Containers principais
      # -------------------------------------------------------------
      containers:
        - name: n8n
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}

          # -------------------------------------------------------------
          # 3.a) Porta que o n8n vai expor internamente (por padr√£o: 5678)
          # -------------------------------------------------------------
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP

          # -------------------------------------------------------------
          # 3.b) Vari√°veis de ambiente
          # -------------------------------------------------------------
          env:
            - name: EXECUTIONS_PROCESS
              value: "queue"
            - name: EXECUTIONS_REDIS_HOST
              value: "{{ .Values.redisConfig.host }}"
            - name: EXECUTIONS_REDIS_PORT
              value: "{{ .Values.redisConfig.port | quote }}"
            - name: N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS
              value: "false"
            - name: N8N_PORT
              value: "{{ .Values.service.port | quote }}"
            - name: N8N_HOST
              value: "0.0.0.0"

          # -------------------------------------------------------------
          # 3.c) VolumeMounts
          # -------------------------------------------------------------
          volumeMounts:
            # 1) Monta emptyDir (ou PVC, se ativado) em /home/node/.n8n
            - name: n8n-data
              mountPath: /home/node/.n8n

            # 2) Monta o ConfigMap apenas em /home/node/.n8n/config/settings.json
            - name: n8n-config
              mountPath: /home/node/.n8n/config/settings.json
              subPath: settings.json

          # -------------------------------------------------------------
          # 3.d) ReadinessProbe
          # -------------------------------------------------------------
          readinessProbe:
            httpGet:
              path: {{ .Values.probe.readiness.path | quote }}
              port: {{ .Values.probe.readiness.port }}
            initialDelaySeconds: {{ .Values.probe.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probe.readiness.periodSeconds }}
            timeoutSeconds: {{ .Values.probe.readiness.timeoutSeconds }}

          # -------------------------------------------------------------
          # 3.e) LivenessProbe
          # -------------------------------------------------------------
          livenessProbe:
            httpGet:
              path: {{ .Values.probe.liveness.path | quote }}
              port: {{ .Values.probe.liveness.port }}
            initialDelaySeconds: {{ .Values.probe.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probe.liveness.periodSeconds }}
            timeoutSeconds: {{ .Values.probe.liveness.timeoutSeconds }}

      # -------------------------------------------------------------
      # 4) Volumes
      # -------------------------------------------------------------
      volumes:
        # 4.1) n8n-data: emptyDir ou, se persistence.enabled, pode ser PVC
        - name: n8n-data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
          {{- else }}
          emptyDir: {}
          {{- end }}

        # 4.2) n8n-config: ConfigMap que cont√©m settings.json
        - name: n8n-config
          configMap:
            name: {{ include "n8n.fullname" . }}-config
            defaultMode: 0644
            # O arquivo do ConfigMap se chama settings.json, que ser√° mapeado
            # pelo subPath no volumeMount
            items:
              - key: settings.json
                path: settings.json