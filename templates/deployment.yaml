apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "n8n.fullname" . }}-deployment
  labels:
    app: {{ include "n8n.name" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "n8n.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ include "n8n.name" . }}
        release: {{ .Release.Name }}
    spec:
      securityContext:
        runAsUser: {{ .Values.securityContext.runAsUser }}
        fsGroup: {{ .Values.securityContext.fsGroup }}

      initContainers:
        # Ajusta permiss√µes de /home/node/.n8n
        - name: fix-permissions
          image: {{ .Values.initContainers.fixPermissions.image }}
          command:
            - sh
            - -c
            - >
              echo "üîß Ajustando permiss√µes em /home/node/.n8n...";
              mkdir -p /home/node/.n8n;
              chown -R {{ .Values.securityContext.runAsUser }}:{{ .Values.securityContext.fsGroup }} /home/node/.n8n || true
          volumeMounts:
            - name: n8n-data
              mountPath: /home/node/.n8n

        # Aguardando Redis, se habilitado
        {{- if .Values.initContainers.waitForRedis.enabled }}
        - name: wait-for-redis
          image: {{ .Values.initContainers.waitForRedis.image }}
          command:
            - sh
            - -c
            - >
              echo "‚è≥ Aguardando Redis {{ .Values.redisConfig.host }}:{{ .Values.redisConfig.port }}...";
              until nc -z {{ .Values.redisConfig.host }} {{ .Values.redisConfig.port }}; do sleep 3; done
          volumeMounts: []
        {{- end }}

      containers:
        - name: n8n
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          env:
            - name: EXECUTIONS_PROCESS
              value: "queue"
            - name: EXECUTIONS_REDIS_HOST
              value: {{ .Values.redisConfig.host | quote }}
            - name: EXECUTIONS_REDIS_PORT
              value: {{ .Values.redisConfig.port | quote }}
            - name: DB_TYPE
              value: "postgresdb"
            - name: DB_POSTGRESDB_HOST
              value: {{ (include "n8n.fullname" .) | printf "%s-postgresql" | quote }}
            - name: DB_POSTGRESDB_PORT
              value: "5432"
            - name: DB_POSTGRESDB_DATABASE
              value: {{ .Values.postgresql.database | quote }}
            - name: DB_POSTGRESDB_USER
              value: {{ .Values.postgresql.username | quote }}
            - name: DB_POSTGRESDB_PASSWORD
              value: {{ .Values.postgresql.password | quote }}
            - name: N8N_DATABASE_MIGRATE
              value: "true"
            - name: N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS
              value: "false"
            - name: N8N_PORT
              value: {{ .Values.service.port | quote }}
            - name: N8N_HOST
              value: "0.0.0.0"
          volumeMounts:
            - name: n8n-data
              mountPath: /home/node/.n8n
            - name: n8n-config
              mountPath: /home/node/.n8n/config/settings.json
              subPath: settings.json
          readinessProbe:
            httpGet:
              path: {{ .Values.probe.readiness.path | quote }}
              port: {{ .Values.probe.readiness.port }}
            initialDelaySeconds: {{ .Values.probe.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probe.readiness.periodSeconds }}
            timeoutSeconds: {{ .Values.probe.readiness.timeoutSeconds }}
          livenessProbe:
            httpGet:
              path: {{ .Values.probe.liveness.path | quote }}
              port: {{ .Values.probe.liveness.port }}
            initialDelaySeconds: {{ .Values.probe.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probe.liveness.periodSeconds }}
            timeoutSeconds: {{ .Values.probe.liveness.timeoutSeconds }}

      volumes:
        - name: n8n-data
          persistentVolumeClaim:
            claimName: {{ include "n8n.fullname" . }}-n8n-pvc
        - name: n8n-config
          configMap:
            name: {{ include "n8n.fullname" . }}-config
            defaultMode: 0644
            items:
              - key: settings.json
                path: settings.json
