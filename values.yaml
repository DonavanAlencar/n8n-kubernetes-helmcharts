# Valores Globais (se necessário, podem ser acessados por subcharts via .Values.global)
# global:
#   storageClass: "local-path"

# Configurações do subchart n8n
n8n:
  # fullnameOverride: auto546-n8n # Você está setando isso via comando, o que é bom

  image:
    repository: n8nio/n8n
    tag: "latest" # Considere usar uma tag específica como "1.46.0"
    pullPolicy: IfNotPresent

  replicaCount: 1

  config:
    webhookUrl: "https://n8n.546digitalservices.com"
    timezone: "America/Sao_Paulo"
    nodeEnv: "production"
    executionsMode: "regular"
    encryptionKey: "1B6kPmysGGoNBKnvGuueJ3222u1zYBOK" # EXEMPLO - MUDE ISSO PARA PRODUÇÃO
    extraEnvVars: []
    extraArgs: [] # Args extras para o comando "n8n start"

  extraNodePackages:
    - name: "@n8n/n8n-nodes-langchain"
      installArgs:
        - "--no-save"

  # Configuração de um ConfigMap para settings.json (opcional)
  configMap:
    enabled: false # Mantenha false se não for usar, ou true se for.
    # name: "" # Deixe em branco para nome gerado automaticamente
    # defaultMode: 420 # 0644 em decimal
    # settings: | # Conteúdo do settings.json
    #   {
    #     "exampleSetting": "exampleValue"
    #   }

  service:
    type: LoadBalancer
    port: 5678
    annotations: {}

  ingress:
    enabled: true
    className: "traefik"
    hosts:
      - host: n8n.546digitalservices.com
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: n8n-tls
        hosts:
          - n8n.546digitalservices.com

  autoscaling:
    enabled: false # Você está setando para true via comando
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 70

  persistence:
    enabled: true
    storageClass: "local-path"
    size: "5Gi"

  podSecurityContext:
    fsGroup: 1000
    runAsUser: 1000
    runAsGroup: 1000
    runAsNonRoot: true

  initContainers:
    fixPermissions:
      enabled: false # Você está setando via comando
      image:
        repository: "busybox"
        tag: "1.36.1"
        pullPolicy: IfNotPresent

  livenessProbe:
    httpGet:
      path: "/healthz"
      port: http
    initialDelaySeconds: 60
    periodSeconds: 30
    timeoutSeconds: 5

  readinessProbe:
    httpGet:
      path: "/healthz"
      port: http
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5

# --- Configurações do subchart PostgreSQL (Bitnami) ---
postgresql:
  enabled: true
  auth:
    username: "n8nuser"
    password: "VhB1knK#2vgVkbnyyc%p%hB#aCx"
    database: "n8ndb"
  primary:
    persistence:
      enabled: true
      storageClass: "local-path"
      size: "10Gi"

# --- Configurações do subchart Redis (Bitnami) ---
redis:
  enabled: true
  architecture: "standalone"
  auth:
    enabled: true
    password: "1B6kPmysGGoNBKnvGuueJ3222u1zYBOK" # EXEMPLO - MUDE ISSO
  master:
    persistence:
      enabled: false
  metrics:
    enabled: false